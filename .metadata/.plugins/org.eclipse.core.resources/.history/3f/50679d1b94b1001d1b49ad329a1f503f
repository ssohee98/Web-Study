<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script type="text/javascript">

	console.log("add() : " + add(10, 20));	//가능
	//console.log("add2() : " + add2(100, 200));	//에러

	//선언적 함수 = 함수이름 정의, 위치와 상관없이 함수 위에서도 호출 가능
	function add(a, b) {	//리턴타입X, 파라미터에 데이터타입 선언 필요X
		let sum = a + b;
		return sum;
	}
	
	//익명함수 = 함수이름 정의X, 파싱과정에서 top-down방식을 따르므로 위에서 호출하면 error
	//1.함수를 변수에 넣을 수 있다.
	let add2 = function(a,b) {
		let sum = a + b;
		return sum;
	}

	console.log("add2() : " + add2(100, 200));	//함수 밑에서만 호출
	console.log(typeof add2);	//타입 function
	
	let plus = add;	//함수를 변수에 대입 가넝한 => add함수의 주소값을 plus변수에 할당 => plus도 함수가 된다.
	console.log(typeof plus);
	console.log(plus(1,2));	//3 : 함수가 잘 실행된다.
	

	//2.함수의 파라미터에 함수를 전달할 수 있다.
	let foo = function(func) {
		if(typeof func === 'function') {	//반드시 함수가 들어오도록 타입으로 검증
			func();
		}
	};

	//콜백함수
	foo(function() {
		console.log('파라미터에 함수를 전달하는 예제');
	})
	
	//2-2 함수를 리턴
	let foo2 = function() {
		return function() {
			console.log('함수를 리턴하는 예제');
		}
	}
	
	foo2()();	//foo2()함수의 리턴값
	//let baz = foo2();
	//baz();
	
	
	//3.함수를 객채에 넣을 수 있다.
	function call(mode) {
		let obj = {	//obj객체 안에 함수 넣기
			'plus' : function(left, right) {
				return left + right;
			},
			'minus' : function(left, right) {
				return left - right;
			}
		};
		
		return obj[mode];	//obj객체의 mode(plus/minus)별로 각 내용 2개 리턴
	}
	
	var func2 = call('minus');	//fucn2 에 call함수의 minus함수 넣기
	console.log("call(minus) : " +func2(200, 30));
	
	//4.함수를 배열에 넣을 수 있다.
	let arrays = [
		function(input) {
			return input + 10;
		},
		function(input) {
			return input - 10;
		},
		function(input) {
			return input * 10;
		}
	];
	
	for(let i = 0; i < arrays.length; i++) {
		console.log(arrays[i](10));
	}
	


	//콜백함수(함수의 파라미터에 전달되는 함수)
	function sortDesending(a, b) {	//내림차순 정렬
		return b - a;
		/*if(a > b) {
			return -1;
		} else if(a < b) {
			return 1;
		} else return 0;*/
	}
	
	let arr = [39, 1, 34, 28, 88, 23];
	console.log(arr.sort());	//기본 오름차순, sort(함수) => 함수: 정렬기준 정의
	console.log(arr.sort(sortDesending));	//내림차순으로 정렬
	
	
	//즉시실행함수 : 함수 정의와 동시에 호출
	let re = (function() {
		return '즉시 실행함수 실행 결과';
	})();
	
	console.log(re);
	
	
	//ex. 즉시실행함수에 파라미터값을 넣고 합 출력
	let sum = (function(left, right) {
		return left + right;
	})(5, 10);
	
	console.log(sum);
	
	
</script>
</head>
<body>

</body>
</html>